// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int      @id @default(autoincrement())
  name     String   @db.VarChar(120)
  imageSrc     String   @db.VarChar(200)
  price  Int
  vat Int
  quantity Int
  discountPrice Int?
  description String   @db.VarChar(1000)
  scoreValue Int
  productInCategories ProductInCategory[]
  installmentPrice Int?
  isBestseller Boolean?   
  hasFreeShipping Boolean?
  scores ProductScore[]
  productComment ProductComment? 
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  productInCategories ProductInCategory[]
  parentId Int?     
}

model ProductInCategory {
  product       Product     @relation(fields: [productId], references: [id])
  productId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([productId, categoryId])
}

model ProductScore {
 id       Int  @id @default(autoincrement())
 product       Product     @relation(fields: [productId], references: [id])
 productId     Int
 score Int
 addDate DateTime   @default(now())
 ipAddress String @db.VarChar(45)
 productComment ProductComment? 
}

model ProductSpecification {
  id       Int  @id @default(autoincrement())
  productId     Int?
  specification   Specification @relation(fields: [specificationId], references: [id])
  specificationId Int
}

model Specification {
 id       Int  @id @default(autoincrement())
 name String @db.VarChar(50)
 value String @db.VarChar(100)
 isMain Boolean
 productSpecification ProductSpecification[]
}

model ProductDescription {
  id       Int  @id @default(autoincrement())
  productId     Int?
  description   Description @relation(fields: [descriptionId], references: [id])
  descriptionId Int
}

model Description {
 id       Int  @id @default(autoincrement())
 name String @db.VarChar(50)
 imageSrc     String   @db.VarChar(200)
 description String   @db.VarChar(1000)
 productDescription ProductDescription[]
}

model ProductComment {
   id       Int  @id @default(autoincrement())
   product      Product   @relation(fields: [productId], references: [id])
   productId Int @unique
   comment String   @db.VarChar(1000)
   addDate DateTime   @default(now())
   username String @db.VarChar(50)
   avatarImgScr String @db.VarChar(250)
  productScore      ProductScore   @relation(fields: [scoreId], references: [id])
  scoreId Int @unique
  helpfullCommentCount Int
  unhelpfulCommentCount Int
}

model Newsletter {
    id      Int       @id @default(autoincrement())
    email   String    @unique @db.VarChar(120)
    addDate DateTime  @default(now())
}

model Advertisement {
  id          Int      @id @default(autoincrement())
  addDate     DateTime @default(now())
  expiredDate DateTime @default(now())
  title       String   @db.VarChar(120)
  imageSrc    String   @db.VarChar(200)
  description String   @db.VarChar(1000)
  url         String   @db.VarChar(300)
}